##Strategy Design Pattern

The Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. 
Strategy lets the algorithm vary independently from clients that use it.

###When to use the Strategy Pattern
* When you want to define a class that will have one behavior that is similar to other behariors in a list
  * I want the class object to be able to choose from 
     * Not flying 
	 * Fly with Wings 
	 * Fly super fast
* When you need to use one of several behaviors dynamically	   
* Often reduces long list of conditionals
* Avoids duplicate code
* Keeps class changes from forcing other class changes
* Can hide complicated / secret code from the user
* Negative: Increased number of objects / classes

Derek Banas<br>
https://www.youtube.com/watch?v=-NCgRD9-C6o&index=3&list=PLF206E906175C7E07
http://www.newthinktank.com/2012/08/strategy-design-pattern-tutorial/

Source making<br>
https://sourcemaking.com/design_patterns/strategy
https://sourcemaking.com/design_patterns/strategy/java/1